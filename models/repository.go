// Copyright (C) 2022 Check Point Software Technologies Ltd. All rights reserved.

// Licensed under the Apache License, Version 2.0 (the "License");
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package models

// Values list of values
type Values []string

// ValuesWithTime a pair of values and last modified unix timestamp
type ValuesWithTime struct {
	First  Values `json:"first"`
	Second int64  `json:"second"`
}

// MapKeyValue cereal representation of a map for confidence set
type MapKeyValue struct {
	Key   string         `json:"key"`
	Value ValuesWithTime `json:"value"`
}

// ValueWithLevel a pair of values and confidence level
type ValueWithLevel struct {
	Key   string  `json:"key"`
	Value float64 `json:"value"`
}

// MapKeyValueLevel cereal representation of a map for confidence level
type MapKeyValueLevel struct {
	Key   string           `json:"key"`
	Value []ValueWithLevel `json:"value"`
}

// ConfidenceData the content of confidence file generated by the agent
type ConfidenceData struct {
	ConfidenceSet    []MapKeyValue      `json:"confidence_set"`
	ConfidenceLevels []MapKeyValueLevel `json:"confidence_levels"`
}

// SyncType Enum representing the underlying data to sync
type SyncType string

// Enum of sync types
const (
	ScannersDetector     SyncType = "ScannersDetector"
	IndicatorsConfidence SyncType = "Indicators/Confidence"
	IndicatorsTrusted    SyncType = "Indicators/Trust"
	TypesConfidence      SyncType = "Type/Confidence"
	TypesTrusted         SyncType = "Type/Trust"
)

// SyncID contain all the data that defines the sync operation
type SyncID struct {
	TenantID string
	AssetID  string
	Type     SyncType
	WindowID string
}

// SyncLearnNotificationConsumers is sync data payload
type SyncLearnNotificationConsumers struct {
	AssetID  string   `json:"assetId"`
	Type     SyncType `json:"type"`
	WindowID string   `json:"windowId"`
}
